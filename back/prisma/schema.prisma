// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

//table 분리 예정//
model User {
  user_email    String        @id @unique
  nickname      String        @unique
  password      String
  password_hint String
  token         String?       @unique
  age           String?
  region        String?
  gender        String?
  profile_image String?
  introduce     String?
  ban           Boolean       @default(false)
  withdrawal    Boolean       @default(false)
  role          Role          @default(USER)
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  Board         Board[]
  Comment       CommentPost[]
  VotePost      VotePost[]
  Challenge     Challenge[]
  Challenger Challenger[]
}

enum Role {
  USER
  ADMIN
}

model Challenge {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  goal        String
  start_date  DateTime @db.DateTime(0)
  due_date    DateTime @db.DateTime(0)
  author      User     @relation(fields: [proposer], references: [nickname])
  proposer    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  Challenger Challenger[]
}

model Challenger {
  challenge_id Int
  Challenge Challenge @relation(fields: [challenge_id], references: [id])
  nickname  String
  User User @relation(fields: [nickname], references: [nickname])

  @@id([challenge_id, nickname])
}

model Board {
  id           String        @id @unique @default(uuid())
  author       User          @relation(fields: [author_email], references: [user_email])
  author_email String
  title        String
  description  String
  view         Int           @default(0)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  Comment      CommentPost[]
  VotePost     VotePost[]

  @@index([id, createdAt(sort: Desc)])
}

model CommentPost {
  id           String   @id @unique @default(uuid())
  author       User     @relation(fields: [author_email], references: [user_email])
  author_email String
  post         Board    @relation(fields: [post_id], references: [id])
  post_id      String
  description  String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model VotePost {
  id        String   @id @default(uuid())
  voter     User     @relation(fields: [voter_id], references: [user_email])
  voter_id  String
  post      Board    @relation(fields: [post_id], references: [id])
  post_id   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SeaLevelKorea {
  year      Int   @id
  sea_level Float @db.Float
}

model EmissionCO2 {
  year  Int    @id
  World BigInt @db.UnsignedBigInt
  USA   BigInt @db.UnsignedBigInt
  EU    BigInt @db.UnsignedBigInt
  China BigInt @db.UnsignedBigInt
  Korea BigInt @db.UnsignedBigInt
}

model Temperture {
  year  Int   @id
  World Float @db.Float
  USA   Float @db.Float
  EU    Float @db.Float
  China Float @db.Float
  Korea Float @db.Float
}
